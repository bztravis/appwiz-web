@use 'sass:color';
@use '../../styles/colors.module';
@use '../../styles/sizes.module';
@use '../../styles/utils.module' as u;
@use '../HatText/HatText.module.scss';

$space-sm-md: u.average(sizes.$space-sm, sizes.$space-md);

.base {
  @include HatText.condensed;
  border-width: u.maintain-px(1);
  border-radius: sizes.$space-sm;
  border-style: solid;
  display: flex;
  justify-content: center;
  align-items: center;
  text-decoration: none;

  &:focus {
    outline: none;
    transition: box-shadow 0.1s;
  }

  &:hover {
    cursor: pointer;
  }

  &.disabled {
    opacity: 0.5;

    &:hover {
      cursor: not-allowed;
      filter: none;
    }
  }
}

// conditionals

.sm {
  padding: sizes.$space-xs sizes.$space-xs;
  gap: sizes.$space-xs;
  font-size: sizes.$font-xs;
  line-height: sizes.$line-height-xs;
}

.md {
  padding: sizes.$space-sm $space-sm-md;
  gap: sizes.$space-xs;
  font-size: sizes.$font-sm;
  line-height: sizes.$line-height-sm;
}

.lg {
  padding: $space-sm-md $space-sm-md;
  gap: sizes.$space-sm;
  font-size: sizes.$font-md;
  line-height: sizes.$line-height-lg;
}

.primary {
  border-color: colors.$primary;
  background: colors.$primary;
  color: colors.$background;

  &:focus {
    box-shadow: 0px 0px 0px 4px color.mix(colors.$accent, transparent, 30%);
  }

  &:hover {
    filter: brightness(1.2);
  }
}

.secondary {
  border-color: colors.$input-border;
  background: colors.$background;
  color: colors.$primary;

  &:focus {
    border-color: colors.$accent;
    box-shadow: 0px 0px 0px 4px color.mix(colors.$accent, transparent, 30%);
  }

  &:hover {
    filter: brightness(0.98);
  }
}

.accent {
  border-color: colors.$accent;
  background: colors.$accent;
  color: colors.$background;

  &:focus {
    box-shadow: 0px 0px 0px 4px color.mix(colors.$accent, transparent, 30%);
  }

  &:hover {
    filter: brightness(0.95);
  }
}

.destructive {
  border-color: colors.$destructive;
  background: colors.$destructive;
  color: colors.$background;

  &:focus {
    box-shadow: 0px 0px 0px 4px color.mix(colors.$destructive, transparent, 30%);
  }

  &:hover {
    filter: brightness(0.95);
  }
}

.constructive {
  border-color: colors.$constructive;
  background: colors.$constructive;
  color: colors.$background;

  &:focus {
    box-shadow: 0px 0px 0px 4px color.mix(colors.$constructive, transparent, 30%);
  }

  &:hover {
    filter: brightness(0.95);
  }
}
